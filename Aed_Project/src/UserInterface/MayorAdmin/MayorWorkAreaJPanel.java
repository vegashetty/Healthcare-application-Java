/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.MayorAdmin;

import Business.Ecosystem;
import Business.Email.EmailSender;
import Business.Employee.Employee;
import Business.Locality.Locality;
import Business.Organization.CaregiverOrganization;
import Business.Organization.DoctorOrganization;
import Business.Organization.MayorOrganization;
import Business.Organization.NurseOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdministerVaccineRequest;
import Business.WorkQueue.AdmitPatientWorkRequest;
import Business.WorkQueue.AssignDoctorWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vega
 */
public class MayorWorkAreaJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
private UserAccount userAccount;
private MayorOrganization mayOrg;
private Locality locality;
private Ecosystem business;


    /**
     * Creates new form MayorWorkAreaJPanel
     */
    public MayorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Locality locality,Ecosystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.mayOrg = (MayorOrganization )organization;
        this.locality = locality;
        this.business = business;
        populateTable();
    }
     private void populateTable(){
          
          
             
    
        DefaultTableModel model = (DefaultTableModel)mayorjTable.getModel();
        
        model.setRowCount(0);
        
       
     
            Object[] row = new Object[3];
            row[0] = locality.getLocalityType();
             Organization org = null;
        for (Organization organization : locality.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof DoctorOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
          
                    for(UserAccount u : org.getUserAccountDirectory().getUserAccountList())
                    {
                        for(Employee e : org.getEmployeeDirectory().getEmployeeList())
                        {
                          //  row[1]= e.getPatientCount();
                        }
                    
        
     /* for(WorkRequest req :u.getWorkQueue().getWorkRequestList()){
        AssignDoctorWorkRequest apwr = ( AssignDoctorWorkRequest)req;
            {
            row[1] = apwr.getCount();
            }
      }*/
                    }
        }
        
        
        
             Organization org1 = null;
        for (Organization organization : locality.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof NurseOrganization){
                org1 = organization;
                break;
            }
        }
        if (org1!=null){
          
                    for(UserAccount u1 : org1.getUserAccountDirectory().getUserAccountList())
                    {
                         for(Employee e : org1.getEmployeeDirectory().getEmployeeList())
                        {
                            row[1]= e.getPatientCount();
                        }
    /*  for(WorkRequest req1 :u1.getWorkQueue().getWorkRequestList()){
        AdministerVaccineRequest adwr = ( AdministerVaccineRequest)req1;
            
            row[2] = adwr.getCuredCount();}
      }*/
                    }
        }
            model.addRow(row);
            
      }
                    
    
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mayorjTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(231, 231, 253));

        jLabel1.setFont(new java.awt.Font("Superclarendon", 1, 18)); // NOI18N
        jLabel1.setText("Mayor Work Area");

        mayorjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Locality Type", "Vaccines administered"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(mayorjTable);

        jButton2.setBackground(new java.awt.Color(51, 51, 255));
        jButton2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Contact Health Care Chief");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon("/Users/vega/Downloads/phca_logo.png")); // NOI18N

        jLabel6.setFont(new java.awt.Font("Silom", 0, 10)); // NOI18N
        jLabel6.setText("National Pediatric Pneumonia Healthcare");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(639, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(271, 271, 271)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(260, 260, 260)
                                .addComponent(jButton2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(17, 17, 17)
                .addComponent(jLabel6)
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
ContactHealthOrgJPanel manageOrganizationJPanel = new ContactHealthOrgJPanel(userProcessContainer, userAccount,locality);
        userProcessContainer.add("manageOrganizationJPanel", manageOrganizationJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);      
     
     
             // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mayorjTable;
    // End of variables declaration//GEN-END:variables
}
