/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorAdmin;

import Business.Employee.Employee;
import Business.House.House;
import Business.Locality.Locality;
import Business.Organization.DoctorOrganization;
import Business.Organization.NurseOrganization;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.Patient.VitalSignSensor;
import Business.Patient.VitalSignSensorHistory;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdministerVaccineRequest;
import Business.WorkQueue.AssignDoctorWorkRequest;
import Business.WorkQueue.MonitorVitalsWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vega
 */
public class DoctorAdminJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
    private Locality locality;
    private UserAccount userAccount;
    private DoctorOrganization docOrg;
    /**
     * Creates new form DoctorAdminJPanel
     */
    public DoctorAdminJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Locality locality) {

        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.locality = locality;
        this.docOrg = (DoctorOrganization)organization;
        populateTable();
        populateEmployeeComboBox();
        
    }
    public void populateEmployeeComboBox(){
        nursejComboBox.removeAllItems();
       Organization org = null;
        for (Organization organization : locality.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof NurseOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
  
    
           for (Employee e : org.getEmployeeDirectory().getEmployeeList())
           {
            nursejComboBox.addItem(e);
        }
    }}
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)doctorjTable.getModel();
        
        model.setRowCount(0);
       /* Organization org = null;
        for (Organization organization : locality.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof DoctorOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
               for(UserAccount u : org.getUserAccountDirectory().getUserAccountList())
               {*/
                   for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
             
         
       
        
                 AssignDoctorWorkRequest adwr = (AssignDoctorWorkRequest)request;
                   
                   
            Object[] row = new Object[5];
            row[0] = adwr;
            //row[0] = adwr.getSender();
            row[1] = adwr.getPatient();
            //row[1]= p.getPersonName();
              for(VitalSignSensorHistory vssh : adwr.getPatient().getVitalSignSensorList().getList())
            {ArrayList<VitalSignSensor> vitalSignList = vssh.getHistory();

            for (VitalSignSensor vitalSign : vitalSignList) 
            {
            row[3] = vitalSign.getTimestamp();
            row[2] = vitalSign.getStatus();
            }
                  
            
            model.addRow(row);
        
            
            }
           // }
      //  }
            
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        doctorjTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        viewjButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nursejComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        assignNurseButton = new javax.swing.JButton();
        statusjTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nurseMessage = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setBackground(new java.awt.Color(231, 231, 253));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        doctorjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "Patient ID", "Vital Status", "Date tracked on"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(doctorjTable);
        if (doctorjTable.getColumnModel().getColumnCount() > 0) {
            doctorjTable.getColumnModel().getColumn(0).setMinWidth(0);
            doctorjTable.getColumnModel().getColumn(0).setPreferredWidth(0);
            doctorjTable.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 540, 151));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Welcome Doctor");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 169, -1));

        viewjButton.setBackground(new java.awt.Color(51, 51, 255));
        viewjButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        viewjButton.setForeground(new java.awt.Color(255, 255, 255));
        viewjButton.setText("View Patient Details");
        viewjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewjButtonActionPerformed(evt);
            }
        });
        add(viewjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 380, 250, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon("/Users/vega/Downloads/phca_logo.png")); // NOI18N
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, 255, -1));

        jLabel9.setFont(new java.awt.Font("Silom", 0, 10)); // NOI18N
        jLabel9.setText("National Pediatric Pneumonia Healthcare");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 120, -1, 35));

        nursejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(nursejComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 440, 210, 40));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel4.setText("Choose Nurse :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 440, -1, -1));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel5.setText("Provide status to hospital");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 600, -1, -1));

        assignNurseButton.setBackground(new java.awt.Color(51, 51, 255));
        assignNurseButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        assignNurseButton.setForeground(new java.awt.Color(255, 255, 255));
        assignNurseButton.setText("Assign Nurse");
        assignNurseButton.setToolTipText("");
        assignNurseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignNurseButtonActionPerformed(evt);
            }
        });
        add(assignNurseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 670, 197, 40));
        add(statusjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 590, 240, 37));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel6.setText("Provide message to nurse");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 510, -1, -1));
        add(nurseMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 500, 220, 34));

        jLabel3.setIcon(new javax.swing.ImageIcon("/Users/vega/Downloads/Healchare.jpg")); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-440, -10, 1860, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewjButtonActionPerformed
int selectedRow = doctorjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table.", "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Patient p = (Patient)doctorjTable.getValueAt(selectedRow, 1);
        ViewPatientJPanel vuvsJPanel = new ViewPatientJPanel(userProcessContainer, p);
        userProcessContainer.add("vuvsJPanel", vuvsJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);          // TODO add your handling code here:
    }//GEN-LAST:event_viewjButtonActionPerformed

    private void assignNurseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignNurseButtonActionPerformed
      int selectedRow = doctorjTable.getSelectedRow();
 AssignDoctorWorkRequest selectedPatient;
        
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(this,"Select a row","warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        else{
            selectedPatient = (AssignDoctorWorkRequest)doctorjTable.getValueAt(selectedRow,0);
        }
        
       
       
        
        if(selectedPatient.getMessage()!=null)
        {
            JOptionPane.showMessageDialog(this, "Assigned already.","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Employee e = (Employee)nursejComboBox.getSelectedItem();
        //for (UserAccount ua : egetEmployeeDirectory().getEmployeeList())

        //e.

       
        Patient selectedPerson;

        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(this,"Select a row","warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        else{
            selectedPerson = (Patient)doctorjTable.getValueAt(selectedRow,1);
            //System.out.println("er");
        }
      AdministerVaccineRequest request = new AdministerVaccineRequest();
        request.setPatient(selectedPerson);

        Organization org = null;
        for (Organization organization : locality.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof NurseOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){

            for(UserAccount u : org.getUserAccountDirectory().getUserAccountList())
            {
                if(u.getEmployee() == e)
                {
                    WorkRequest req = request;

                    org.getWorkQueue().getWorkRequestList().add(req);

                    u.getWorkQueue().getWorkRequestList().add(req);

                    request.setReceiver(userAccount);

                    request.setSender(u);
                    request.setMessage(nurseMessage.getText());
                    nurseMessage.setText("");
                    DefaultTableModel model = (DefaultTableModel) doctorjTable.getModel();
                   // model.removeRow(selectedRow);

                }

            }
        }

        for(WorkRequest request1 : userAccount.getWorkQueue().getWorkRequestList()){

            AssignDoctorWorkRequest apwr = (AssignDoctorWorkRequest)request1;

            apwr.setMessage(statusjTextField.getText());
            //    populateTable();
statusjTextField.setText("");
  JOptionPane.showMessageDialog(this,"Nurse assigned with Patient","Information",JOptionPane.INFORMATION_MESSAGE);

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_assignNurseButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignNurseButton;
    private javax.swing.JTable doctorjTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nurseMessage;
    private javax.swing.JComboBox nursejComboBox;
    private javax.swing.JTextField statusjTextField;
    private javax.swing.JButton viewjButton;
    // End of variables declaration//GEN-END:variables
}
