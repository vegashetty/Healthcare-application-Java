/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.HealthCareOrgAdmin;

import Business.Employee.Employee;
import Business.House.House;
import Business.Locality.Locality;
import Business.Organization.CaregiverOrganization;
import Business.Organization.HealthCareOrg;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.Patient.VitalSignSensor;
import Business.Patient.VitalSignSensorHistory;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdmitPatientWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vega
 */
public class AssignPatientToCaregiverJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
    private Locality locality;
    private UserAccount userAccount;
    private HealthCareOrg healthCareOrganization;
    
    /**
     * 
     * Creates new form AssignPatientToCaregiverJPanel
     */
     public AssignPatientToCaregiverJPanel(JPanel userProcessContainer,UserAccount userAccount,HealthCareOrg healthCareOrganization,Locality locality) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.locality = locality;
               this.healthCareOrganization = healthCareOrganization;
for(House h : locality.getHouseDirectory().getHouseDirectory())
        {
          
        ArrayList<Person> personList = h.getPersonDirectory().getPersonHistory();
    
        }      
populateEmployeeComboBox();
populateLocalityComboBox();
     
        
    }
     
     private void populateTable(House house) {
        DefaultTableModel model = (DefaultTableModel) viewPersonsjTable.getModel();
             House h =(House)housejComboBox.getSelectedItem();
             model.setRowCount(0);
        
        //for(House h : locality.getHouseDirectory().getHouseDirectory())
        
          
        for (Person person : h.getPersonDirectory().getPersonHistory()) {
            
           
            Object[] row = new Object[4];
            row[0] = h.getHid();
            row[2]= person.getPersonName();
                 
             //   System.out.println("j" + vitalSign.getStatus());
         // row [3]= vitalSign.getStatus();
            
           
            if(person.getPatient()!=null)
            {
                row[1] = person.getPatient();
               
                for(VitalSignSensorHistory vssh :person.getPatient().getVitalSignSensorList().getList() )
                {
                    
                    // System.out.println("ko"+person.getPatient().getVitalSignSensorList().getList());
                    for(VitalSignSensor vss : vssh.getHistory())
                    { 
                                        row[3] = vss.getStatus();}

                }
            }
            else
            {
                row[1] = "Patient Not Created";
            }
  
            model.addRow(row);
        }
     }
     public void populateLocalityComboBox(){
        housejComboBox.removeAllItems();
        
        for (House h : locality.getHouseDirectory().getHouseDirectory()){
           housejComboBox.addItem(h);
        }
    }
     public void populateEmployeeComboBox(){
        caregiverjComboBox.removeAllItems();
       Organization org = null;
        for (Organization organization : locality.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof CaregiverOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
  
    
           for (Employee e : org.getEmployeeDirectory().getEmployeeList())
           {
            caregiverjComboBox.addItem(e);
        }
    }}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        valuejLabel = new javax.swing.JLabel();
        backjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewPersonsjTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        caregiverjComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        assignCaregiverjButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        housejComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        statusjTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(231, 231, 253));

        valuejLabel.setText("value");

        backjButton.setBackground(new java.awt.Color(51, 51, 255));
        backjButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        backjButton.setForeground(new java.awt.Color(255, 255, 255));
        backjButton.setText("Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        viewPersonsjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "House ID", "Patient ID", "Name", "Vital Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewPersonsjTable);

        jLabel2.setText("Choose house");

        caregiverjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        caregiverjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caregiverjComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setText("Caregiver List");

        assignCaregiverjButton.setBackground(new java.awt.Color(51, 51, 255));
        assignCaregiverjButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        assignCaregiverjButton.setForeground(new java.awt.Color(255, 255, 255));
        assignCaregiverjButton.setText("Assign");
        assignCaregiverjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignCaregiverjButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Superclarendon", 1, 18)); // NOI18N
        jLabel1.setText("Assign Patient to Caregiver:");

        housejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        housejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                housejComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon("/Users/vega/Downloads/phca_logo.png")); // NOI18N

        jLabel9.setFont(new java.awt.Font("Silom", 0, 10)); // NOI18N
        jLabel9.setText("National Pediatric Pneumonia Healthcare");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel4.setText("Status of Patient");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(backjButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(188, 188, 188)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(assignCaregiverjButton)
                                        .addGap(152, 152, 152))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(caregiverjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGap(113, 113, 113)
                                            .addComponent(statusjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(jLabel2)
                .addGap(61, 61, 61)
                .addComponent(housejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(242, 242, 242))
            .addGroup(layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(valuejLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(valuejLabel))
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(housejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(caregiverjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(36, 36, 36)
                        .addComponent(assignCaregiverjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(backjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
  userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
       
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);           // TODO add your handling code here:
    }//GEN-LAST:event_backjButtonActionPerformed

    private void caregiverjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caregiverjComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caregiverjComboBoxActionPerformed

    private void assignCaregiverjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignCaregiverjButtonActionPerformed

        
       
      /* 
         if(request.getStatus() !=null)
        {
            JOptionPane.showMessageDialog(this, "Assigned already.","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
       */
        Employee e = (Employee)caregiverjComboBox.getSelectedItem();
        //for (UserAccount ua : egetEmployeeDirectory().getEmployeeList())

        //e.

        int selectedRow = viewPersonsjTable.getSelectedRow();
        Patient selectedPerson;
        Person selectedPerson1;

        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(this,"Select a row","warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        else{
            selectedPerson = (Patient)viewPersonsjTable.getValueAt(selectedRow,1);
         
        }
        AdmitPatientWorkRequest request = new AdmitPatientWorkRequest();
        request.setPatient(selectedPerson);
        Organization org = null;
        for (Organization organization : locality.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof CaregiverOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
  
                    for(UserAccount u : org.getUserAccountDirectory().getUserAccountList())
                    {
                        if(u.getEmployee() == e)
                        {
                            WorkRequest req = request;

                            org.getWorkQueue().getWorkRequestList().add(req);
                         
                            u.getWorkQueue().getWorkRequestList().add(req);

                           

                            request.setSender(u);
request.setStatus(statusjTextField.getText());

      
 DefaultTableModel model = (DefaultTableModel) viewPersonsjTable.getModel();
// model.removeRow(selectedRow);
  JOptionPane.showMessageDialog(this,"Caregiver assigned with Patient","Information",JOptionPane.INFORMATION_MESSAGE);
 statusjTextField.setText("");
 
                        }
                    
        }
                }

// TODO add your handling code here:* */
    }//GEN-LAST:event_assignCaregiverjButtonActionPerformed

    private void housejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_housejComboBoxActionPerformed
House house = (House) housejComboBox.getSelectedItem();
        if (house != null){
            populateTable(house)  ; }        // TODO add your handling code here:
    }//GEN-LAST:event_housejComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignCaregiverjButton;
    private javax.swing.JButton backjButton;
    private javax.swing.JComboBox caregiverjComboBox;
    private javax.swing.JComboBox housejComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField statusjTextField;
    private javax.swing.JLabel valuejLabel;
    private javax.swing.JTable viewPersonsjTable;
    // End of variables declaration//GEN-END:variables
}
